plugins {
    id 'org.sonarqube' version '2.6.2'
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

group = 'net.codecrete.qrbill'
version = '2.2.1'
archivesBaseName = 'qrbill-generator'

sourceCompatibility = 1.8

jar {
}

test {
    useJUnitPlatform()
}

javadoc {
    include 'net/codecrete/qrbill/canvas/*'
    include 'net/codecrete/qrbill/generator/*'

    title = "QR Bill Generator ${version}"
    options.addBooleanOption('html5', true)
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'qrbill-generator'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Swiss QR Bill'
                description = 'Java library for generating Swiss QR bills'
                url = 'https://github.com/manuelbl/SwissQRBill'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'manuelbl'
                        name = 'Manuel Bleichenbacher'
                        email = 'manuel.bleichenbacher@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/manuelbl/SwissQRBill.git'
                    developerConnection = 'scm:git:ssh://github.com:manuelbl/SwissQRBill.git'
                    url = 'https://github.com/manuelbl/SwissQRBill/tree/master'
                }
            }
        }
    }
    repositories {
        maven {
            def releaseRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releaseRepoUrl
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

sonarqube {
    properties {
        property 'sonar.exclusions', 'src/main/java/net/codecrete/io/nayuki/qrcodegen/*.java'
    }
}

dependencies {
    implementation 'io.nayuki:qrcodegen:[1.5,)'
    implementation 'org.apache.pdfbox:pdfbox:[2.0,)'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}
